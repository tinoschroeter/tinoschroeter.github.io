{
  
  "0": {
    "title": "01 Color",
    "content": "01 Color . . Color schemes | Specific visual customization | Override styles | . Color schemes . New . Just the Docs supports two color schemes: light (default), and dark. . To enable a color scheme, set the color_scheme parameter in your site’s _config.yml file: . Example . # Color scheme currently only supports &quot;dark&quot; or nil (default) color_scheme: &quot;dark&quot; . Preview dark color scheme . Specific visual customization . To customize your site’s aesthetic, open _sass/custom/custom.scss in your editor to see if there is a variable that you can override. Most styles like fonts, colors, spacing, etc. are derived from these variables. To override a specific variable, uncomment its line and change its value. . For example, to change the link color from the purple default to blue, open _sass/custom/custom.css and find the $link-color variable on line 50. Uncomment it, and change its value to our $blue-000 variable, or another shade of your choosing. . Example . // ... // // $body-text-color: $grey-dk-100; // $body-heading-color: $grey-dk-300; $link-color: $blue-000; // // ... . Note: Editing the variables directly in _sass/support/variables.scss is not recommended and can cause other dependencies to fail. . Override styles . For styles that aren’t defined as a variables, you may want to modify specific CSS classes. To add your own CSS overrides at the end of the cascade, edit _sass/overrides.scss. This will allow for all overrides to be kept in a single file, and for any upstream changes to still be applied. . For example, if you’d like to add your own styles for printing a page, you could add the following styles. . Example . // Print-only styles. @media print { .side-bar, .page-header { display: none; } .main-content { max-width: auto; margin: 1em;} } .",
    "url": "/docs/01_Color.html",
    "relUrl": "/docs/01_Color.html"
  }
  ,"1": {
    "title": "02 Shape",
    "content": "02 Shape . . Color schemes | Specific visual customization | Override styles | . Color schemes . New . Just the Docs supports two color schemes: light (default), and dark. . To enable a color scheme, set the color_scheme parameter in your site’s _config.yml file: . Example . # Color scheme currently only supports &quot;dark&quot; or nil (default) color_scheme: &quot;dark&quot; . Preview dark color scheme . Specific visual customization . To customize your site’s aesthetic, open _sass/custom/custom.scss in your editor to see if there is a variable that you can override. Most styles like fonts, colors, spacing, etc. are derived from these variables. To override a specific variable, uncomment its line and change its value. . For example, to change the link color from the purple default to blue, open _sass/custom/custom.css and find the $link-color variable on line 50. Uncomment it, and change its value to our $blue-000 variable, or another shade of your choosing. . Example . // ... // // $body-text-color: $grey-dk-100; // $body-heading-color: $grey-dk-300; $link-color: $blue-000; // // ... . Note: Editing the variables directly in _sass/support/variables.scss is not recommended and can cause other dependencies to fail. . Override styles . For styles that aren’t defined as a variables, you may want to modify specific CSS classes. To add your own CSS overrides at the end of the cascade, edit _sass/overrides.scss. This will allow for all overrides to be kept in a single file, and for any upstream changes to still be applied. . For example, if you’d like to add your own styles for printing a page, you could add the following styles. . Example . // Print-only styles. @media print { .side-bar, .page-header { display: none; } .main-content { max-width: auto; margin: 1em;} } .",
    "url": "/docs/02_Shape.html",
    "relUrl": "/docs/02_Shape.html"
  }
  ,"2": {
    "title": "03 Environment",
    "content": "03 Environment . . Color schemes | Specific visual customization | Override styles | . Color schemes . New . Just the Docs supports two color schemes: light (default), and dark. . To enable a color scheme, set the color_scheme parameter in your site’s _config.yml file: . Example . # Color scheme currently only supports &quot;dark&quot; or nil (default) color_scheme: &quot;dark&quot; . Preview dark color scheme . Specific visual customization . To customize your site’s aesthetic, open _sass/custom/custom.scss in your editor to see if there is a variable that you can override. Most styles like fonts, colors, spacing, etc. are derived from these variables. To override a specific variable, uncomment its line and change its value. . For example, to change the link color from the purple default to blue, open _sass/custom/custom.css and find the $link-color variable on line 50. Uncomment it, and change its value to our $blue-000 variable, or another shade of your choosing. . Example . // ... // // $body-text-color: $grey-dk-100; // $body-heading-color: $grey-dk-300; $link-color: $blue-000; // // ... . Note: Editing the variables directly in _sass/support/variables.scss is not recommended and can cause other dependencies to fail. . Override styles . For styles that aren’t defined as a variables, you may want to modify specific CSS classes. To add your own CSS overrides at the end of the cascade, edit _sass/overrides.scss. This will allow for all overrides to be kept in a single file, and for any upstream changes to still be applied. . For example, if you’d like to add your own styles for printing a page, you could add the following styles. . Example . // Print-only styles. @media print { .side-bar, .page-header { display: none; } .main-content { max-width: auto; margin: 1em;} } .",
    "url": "/docs/03_Environment.html",
    "relUrl": "/docs/03_Environment.html"
  }
  ,"3": {
    "title": "04 Structure",
    "content": "04 Structure . . Color schemes | Specific visual customization | Override styles | . Color schemes . New . Just the Docs supports two color schemes: light (default), and dark. . To enable a color scheme, set the color_scheme parameter in your site’s _config.yml file: . Example . # Color scheme currently only supports &quot;dark&quot; or nil (default) color_scheme: &quot;dark&quot; . Preview dark color scheme . Specific visual customization . To customize your site’s aesthetic, open _sass/custom/custom.scss in your editor to see if there is a variable that you can override. Most styles like fonts, colors, spacing, etc. are derived from these variables. To override a specific variable, uncomment its line and change its value. . For example, to change the link color from the purple default to blue, open _sass/custom/custom.css and find the $link-color variable on line 50. Uncomment it, and change its value to our $blue-000 variable, or another shade of your choosing. . Example . // ... // // $body-text-color: $grey-dk-100; // $body-heading-color: $grey-dk-300; $link-color: $blue-000; // // ... . Note: Editing the variables directly in _sass/support/variables.scss is not recommended and can cause other dependencies to fail. . Override styles . For styles that aren’t defined as a variables, you may want to modify specific CSS classes. To add your own CSS overrides at the end of the cascade, edit _sass/overrides.scss. This will allow for all overrides to be kept in a single file, and for any upstream changes to still be applied. . For example, if you’d like to add your own styles for printing a page, you could add the following styles. . Example . // Print-only styles. @media print { .side-bar, .page-header { display: none; } .main-content { max-width: auto; margin: 1em;} } .",
    "url": "/docs/04_Structure.html",
    "relUrl": "/docs/04_Structure.html"
  }
  ,"4": {
    "title": "05 Transform",
    "content": "05 Transform . . Color schemes | Specific visual customization | Override styles | . Color schemes . New . Just the Docs supports two color schemes: light (default), and dark. . To enable a color scheme, set the color_scheme parameter in your site’s _config.yml file: . Example . # Color scheme currently only supports &quot;dark&quot; or nil (default) color_scheme: &quot;dark&quot; . Preview dark color scheme . Specific visual customization . To customize your site’s aesthetic, open _sass/custom/custom.scss in your editor to see if there is a variable that you can override. Most styles like fonts, colors, spacing, etc. are derived from these variables. To override a specific variable, uncomment its line and change its value. . For example, to change the link color from the purple default to blue, open _sass/custom/custom.css and find the $link-color variable on line 50. Uncomment it, and change its value to our $blue-000 variable, or another shade of your choosing. . Example . // ... // // $body-text-color: $grey-dk-100; // $body-heading-color: $grey-dk-300; $link-color: $blue-000; // // ... . Note: Editing the variables directly in _sass/support/variables.scss is not recommended and can cause other dependencies to fail. . Override styles . For styles that aren’t defined as a variables, you may want to modify specific CSS classes. To add your own CSS overrides at the end of the cascade, edit _sass/overrides.scss. This will allow for all overrides to be kept in a single file, and for any upstream changes to still be applied. . For example, if you’d like to add your own styles for printing a page, you could add the following styles. . Example . // Print-only styles. @media print { .side-bar, .page-header { display: none; } .main-content { max-width: auto; margin: 1em;} } .",
    "url": "/docs/05_Transform.html",
    "relUrl": "/docs/05_Transform.html"
  }
  ,"5": {
    "title": "06 DOM",
    "content": "06 DOM . . Color schemes | Specific visual customization | Override styles | . Color schemes . New . Just the Docs supports two color schemes: light (default), and dark. . To enable a color scheme, set the color_scheme parameter in your site’s _config.yml file: . Example . # Color scheme currently only supports &quot;dark&quot; or nil (default) color_scheme: &quot;dark&quot; . Preview dark color scheme . Specific visual customization . To customize your site’s aesthetic, open _sass/custom/custom.scss in your editor to see if there is a variable that you can override. Most styles like fonts, colors, spacing, etc. are derived from these variables. To override a specific variable, uncomment its line and change its value. . For example, to change the link color from the purple default to blue, open _sass/custom/custom.css and find the $link-color variable on line 50. Uncomment it, and change its value to our $blue-000 variable, or another shade of your choosing. . Example . // ... // // $body-text-color: $grey-dk-100; // $body-heading-color: $grey-dk-300; $link-color: $blue-000; // // ... . Note: Editing the variables directly in _sass/support/variables.scss is not recommended and can cause other dependencies to fail. . Override styles . For styles that aren’t defined as a variables, you may want to modify specific CSS classes. To add your own CSS overrides at the end of the cascade, edit _sass/overrides.scss. This will allow for all overrides to be kept in a single file, and for any upstream changes to still be applied. . For example, if you’d like to add your own styles for printing a page, you could add the following styles. . Example . // Print-only styles. @media print { .side-bar, .page-header { display: none; } .main-content { max-width: auto; margin: 1em;} } .",
    "url": "/docs/06_DOM.html",
    "relUrl": "/docs/06_DOM.html"
  }
  ,"6": {
    "title": "07 Data",
    "content": "07 Data . . Color schemes | Specific visual customization | Override styles | . Color schemes . New . Just the Docs supports two color schemes: light (default), and dark. . To enable a color scheme, set the color_scheme parameter in your site’s _config.yml file: . Example . # Color scheme currently only supports &quot;dark&quot; or nil (default) color_scheme: &quot;dark&quot; . Preview dark color scheme . Specific visual customization . To customize your site’s aesthetic, open _sass/custom/custom.scss in your editor to see if there is a variable that you can override. Most styles like fonts, colors, spacing, etc. are derived from these variables. To override a specific variable, uncomment its line and change its value. . For example, to change the link color from the purple default to blue, open _sass/custom/custom.css and find the $link-color variable on line 50. Uncomment it, and change its value to our $blue-000 variable, or another shade of your choosing. . Example . // ... // // $body-text-color: $grey-dk-100; // $body-heading-color: $grey-dk-300; $link-color: $blue-000; // // ... . Note: Editing the variables directly in _sass/support/variables.scss is not recommended and can cause other dependencies to fail. . Override styles . For styles that aren’t defined as a variables, you may want to modify specific CSS classes. To add your own CSS overrides at the end of the cascade, edit _sass/overrides.scss. This will allow for all overrides to be kept in a single file, and for any upstream changes to still be applied. . For example, if you’d like to add your own styles for printing a page, you could add the following styles. . Example . // Print-only styles. @media print { .side-bar, .page-header { display: none; } .main-content { max-width: auto; margin: 1em;} } .",
    "url": "/docs/07_Data.html",
    "relUrl": "/docs/07_Data.html"
  }
  ,"7": {
    "title": "08 Events",
    "content": "08 Events . . Color schemes | Specific visual customization | Override styles | . Color schemes . New . Just the Docs supports two color schemes: light (default), and dark. . To enable a color scheme, set the color_scheme parameter in your site’s _config.yml file: . Example . # Color scheme currently only supports &quot;dark&quot; or nil (default) color_scheme: &quot;dark&quot; . Preview dark color scheme . Specific visual customization . To customize your site’s aesthetic, open _sass/custom/custom.scss in your editor to see if there is a variable that you can override. Most styles like fonts, colors, spacing, etc. are derived from these variables. To override a specific variable, uncomment its line and change its value. . For example, to change the link color from the purple default to blue, open _sass/custom/custom.css and find the $link-color variable on line 50. Uncomment it, and change its value to our $blue-000 variable, or another shade of your choosing. . Example . // ... // // $body-text-color: $grey-dk-100; // $body-heading-color: $grey-dk-300; $link-color: $blue-000; // // ... . Note: Editing the variables directly in _sass/support/variables.scss is not recommended and can cause other dependencies to fail. . Override styles . For styles that aren’t defined as a variables, you may want to modify specific CSS classes. To add your own CSS overrides at the end of the cascade, edit _sass/overrides.scss. This will allow for all overrides to be kept in a single file, and for any upstream changes to still be applied. . For example, if you’d like to add your own styles for printing a page, you could add the following styles. . Example . // Print-only styles. @media print { .side-bar, .page-header { display: none; } .main-content { max-width: auto; margin: 1em;} } .",
    "url": "/docs/08_Events.html",
    "relUrl": "/docs/08_Events.html"
  }
  ,"8": {
    "title": "09 Image",
    "content": "09 Image . . Color schemes | Specific visual customization | Override styles | . Color schemes . New . Just the Docs supports two color schemes: light (default), and dark. . To enable a color scheme, set the color_scheme parameter in your site’s _config.yml file: . Example . # Color scheme currently only supports &quot;dark&quot; or nil (default) color_scheme: &quot;dark&quot; . Preview dark color scheme . Specific visual customization . To customize your site’s aesthetic, open _sass/custom/custom.scss in your editor to see if there is a variable that you can override. Most styles like fonts, colors, spacing, etc. are derived from these variables. To override a specific variable, uncomment its line and change its value. . For example, to change the link color from the purple default to blue, open _sass/custom/custom.css and find the $link-color variable on line 50. Uncomment it, and change its value to our $blue-000 variable, or another shade of your choosing. . Example . // ... // // $body-text-color: $grey-dk-100; // $body-heading-color: $grey-dk-300; $link-color: $blue-000; // // ... . Note: Editing the variables directly in _sass/support/variables.scss is not recommended and can cause other dependencies to fail. . Override styles . For styles that aren’t defined as a variables, you may want to modify specific CSS classes. To add your own CSS overrides at the end of the cascade, edit _sass/overrides.scss. This will allow for all overrides to be kept in a single file, and for any upstream changes to still be applied. . For example, if you’d like to add your own styles for printing a page, you could add the following styles. . Example . // Print-only styles. @media print { .side-bar, .page-header { display: none; } .main-content { max-width: auto; margin: 1em;} } .",
    "url": "/docs/09_Image.html",
    "relUrl": "/docs/09_Image.html"
  }
  ,"9": {
    "title": "10 IO",
    "content": "10 IO . . Color schemes | Specific visual customization | Override styles | . Color schemes . New . Just the Docs supports two color schemes: light (default), and dark. . To enable a color scheme, set the color_scheme parameter in your site’s _config.yml file: . Example . # Color scheme currently only supports &quot;dark&quot; or nil (default) color_scheme: &quot;dark&quot; . Preview dark color scheme . Specific visual customization . To customize your site’s aesthetic, open _sass/custom/custom.scss in your editor to see if there is a variable that you can override. Most styles like fonts, colors, spacing, etc. are derived from these variables. To override a specific variable, uncomment its line and change its value. . For example, to change the link color from the purple default to blue, open _sass/custom/custom.css and find the $link-color variable on line 50. Uncomment it, and change its value to our $blue-000 variable, or another shade of your choosing. . Example . // ... // // $body-text-color: $grey-dk-100; // $body-heading-color: $grey-dk-300; $link-color: $blue-000; // // ... . Note: Editing the variables directly in _sass/support/variables.scss is not recommended and can cause other dependencies to fail. . Override styles . For styles that aren’t defined as a variables, you may want to modify specific CSS classes. To add your own CSS overrides at the end of the cascade, edit _sass/overrides.scss. This will allow for all overrides to be kept in a single file, and for any upstream changes to still be applied. . For example, if you’d like to add your own styles for printing a page, you could add the following styles. . Example . // Print-only styles. @media print { .side-bar, .page-header { display: none; } .main-content { max-width: auto; margin: 1em;} } .",
    "url": "/docs/10_IO.html",
    "relUrl": "/docs/10_IO.html"
  }
  ,"10": {
    "title": "11 TimeDate",
    "content": "11 TimeDate . . Color schemes | Specific visual customization | Override styles | . Color schemes . New . Just the Docs supports two color schemes: light (default), and dark. . To enable a color scheme, set the color_scheme parameter in your site’s _config.yml file: . Example . # Color scheme currently only supports &quot;dark&quot; or nil (default) color_scheme: &quot;dark&quot; . Preview dark color scheme . Specific visual customization . To customize your site’s aesthetic, open _sass/custom/custom.scss in your editor to see if there is a variable that you can override. Most styles like fonts, colors, spacing, etc. are derived from these variables. To override a specific variable, uncomment its line and change its value. . For example, to change the link color from the purple default to blue, open _sass/custom/custom.css and find the $link-color variable on line 50. Uncomment it, and change its value to our $blue-000 variable, or another shade of your choosing. . Example . // ... // // $body-text-color: $grey-dk-100; // $body-heading-color: $grey-dk-300; $link-color: $blue-000; // // ... . Note: Editing the variables directly in _sass/support/variables.scss is not recommended and can cause other dependencies to fail. . Override styles . For styles that aren’t defined as a variables, you may want to modify specific CSS classes. To add your own CSS overrides at the end of the cascade, edit _sass/overrides.scss. This will allow for all overrides to be kept in a single file, and for any upstream changes to still be applied. . For example, if you’d like to add your own styles for printing a page, you could add the following styles. . Example . // Print-only styles. @media print { .side-bar, .page-header { display: none; } .main-content { max-width: auto; margin: 1em;} } .",
    "url": "/docs/11_TimeDate.html",
    "relUrl": "/docs/11_TimeDate.html"
  }
  ,"11": {
    "title": "12 Math",
    "content": "12 Math . . Color schemes | Specific visual customization | Override styles | . Color schemes . New . Just the Docs supports two color schemes: light (default), and dark. . To enable a color scheme, set the color_scheme parameter in your site’s _config.yml file: . Example . # Color scheme currently only supports &quot;dark&quot; or nil (default) color_scheme: &quot;dark&quot; . Preview dark color scheme . Specific visual customization . To customize your site’s aesthetic, open _sass/custom/custom.scss in your editor to see if there is a variable that you can override. Most styles like fonts, colors, spacing, etc. are derived from these variables. To override a specific variable, uncomment its line and change its value. . For example, to change the link color from the purple default to blue, open _sass/custom/custom.css and find the $link-color variable on line 50. Uncomment it, and change its value to our $blue-000 variable, or another shade of your choosing. . Example . // ... // // $body-text-color: $grey-dk-100; // $body-heading-color: $grey-dk-300; $link-color: $blue-000; // // ... . Note: Editing the variables directly in _sass/support/variables.scss is not recommended and can cause other dependencies to fail. . Override styles . For styles that aren’t defined as a variables, you may want to modify specific CSS classes. To add your own CSS overrides at the end of the cascade, edit _sass/overrides.scss. This will allow for all overrides to be kept in a single file, and for any upstream changes to still be applied. . For example, if you’d like to add your own styles for printing a page, you could add the following styles. . Example . // Print-only styles. @media print { .side-bar, .page-header { display: none; } .main-content { max-width: auto; margin: 1em;} } .",
    "url": "/docs/12_Math.html",
    "relUrl": "/docs/12_Math.html"
  }
  ,"12": {
    "title": "13 Typography",
    "content": "13 Typography . . Color schemes | Specific visual customization | Override styles | . Color schemes . New . Just the Docs supports two color schemes: light (default), and dark. . To enable a color scheme, set the color_scheme parameter in your site’s _config.yml file: . Example . # Color scheme currently only supports &quot;dark&quot; or nil (default) color_scheme: &quot;dark&quot; . Preview dark color scheme . Specific visual customization . To customize your site’s aesthetic, open _sass/custom/custom.scss in your editor to see if there is a variable that you can override. Most styles like fonts, colors, spacing, etc. are derived from these variables. To override a specific variable, uncomment its line and change its value. . For example, to change the link color from the purple default to blue, open _sass/custom/custom.css and find the $link-color variable on line 50. Uncomment it, and change its value to our $blue-000 variable, or another shade of your choosing. . Example . // ... // // $body-text-color: $grey-dk-100; // $body-heading-color: $grey-dk-300; $link-color: $blue-000; // // ... . Note: Editing the variables directly in _sass/support/variables.scss is not recommended and can cause other dependencies to fail. . Override styles . For styles that aren’t defined as a variables, you may want to modify specific CSS classes. To add your own CSS overrides at the end of the cascade, edit _sass/overrides.scss. This will allow for all overrides to be kept in a single file, and for any upstream changes to still be applied. . For example, if you’d like to add your own styles for printing a page, you could add the following styles. . Example . // Print-only styles. @media print { .side-bar, .page-header { display: none; } .main-content { max-width: auto; margin: 1em;} } .",
    "url": "/docs/13_Typography.html",
    "relUrl": "/docs/13_Typography.html"
  }
  ,"13": {
    "title": "14 Sound",
    "content": "14 Sound . . Color schemes | Specific visual customization | Override styles | . Color schemes . New . Just the Docs supports two color schemes: light (default), and dark. . To enable a color scheme, set the color_scheme parameter in your site’s _config.yml file: . Example . # Color scheme currently only supports &quot;dark&quot; or nil (default) color_scheme: &quot;dark&quot; . Preview dark color scheme . Specific visual customization . To customize your site’s aesthetic, open _sass/custom/custom.scss in your editor to see if there is a variable that you can override. Most styles like fonts, colors, spacing, etc. are derived from these variables. To override a specific variable, uncomment its line and change its value. . For example, to change the link color from the purple default to blue, open _sass/custom/custom.css and find the $link-color variable on line 50. Uncomment it, and change its value to our $blue-000 variable, or another shade of your choosing. . Example . // ... // // $body-text-color: $grey-dk-100; // $body-heading-color: $grey-dk-300; $link-color: $blue-000; // // ... . Note: Editing the variables directly in _sass/support/variables.scss is not recommended and can cause other dependencies to fail. . Override styles . For styles that aren’t defined as a variables, you may want to modify specific CSS classes. To add your own CSS overrides at the end of the cascade, edit _sass/overrides.scss. This will allow for all overrides to be kept in a single file, and for any upstream changes to still be applied. . For example, if you’d like to add your own styles for printing a page, you could add the following styles. . Example . // Print-only styles. @media print { .side-bar, .page-header { display: none; } .main-content { max-width: auto; margin: 1em;} } .",
    "url": "/docs/14_Sound.html",
    "relUrl": "/docs/14_Sound.html"
  }
  ,"14": {
    "title": "15 Libraries",
    "content": "15 Libraries . . Color schemes | Specific visual customization | Override styles | . Color schemes . New . Just the Docs supports two color schemes: light (default), and dark. . To enable a color scheme, set the color_scheme parameter in your site’s _config.yml file: . Example . # Color scheme currently only supports &quot;dark&quot; or nil (default) color_scheme: &quot;dark&quot; . Preview dark color scheme . Specific visual customization . To customize your site’s aesthetic, open _sass/custom/custom.scss in your editor to see if there is a variable that you can override. Most styles like fonts, colors, spacing, etc. are derived from these variables. To override a specific variable, uncomment its line and change its value. . For example, to change the link color from the purple default to blue, open _sass/custom/custom.css and find the $link-color variable on line 50. Uncomment it, and change its value to our $blue-000 variable, or another shade of your choosing. . Example . // ... // // $body-text-color: $grey-dk-100; // $body-heading-color: $grey-dk-300; $link-color: $blue-000; // // ... . Note: Editing the variables directly in _sass/support/variables.scss is not recommended and can cause other dependencies to fail. . Override styles . For styles that aren’t defined as a variables, you may want to modify specific CSS classes. To add your own CSS overrides at the end of the cascade, edit _sass/overrides.scss. This will allow for all overrides to be kept in a single file, and for any upstream changes to still be applied. . For example, if you’d like to add your own styles for printing a page, you could add the following styles. . Example . // Print-only styles. @media print { .side-bar, .page-header { display: none; } .main-content { max-width: auto; margin: 1em;} } .",
    "url": "/docs/15_Libraries.html",
    "relUrl": "/docs/15_Libraries.html"
  }
  ,"15": {
    "title": "",
    "content": "404 . Page not found :( . The requested page could not be found. .",
    "url": "/404.html",
    "relUrl": "/404.html"
  }
  ,"16": {
    "title": "About",
    "content": "This is the base Jekyll theme. You can find out more info about customizing your Jekyll theme, as well as basic Jekyll usage documentation at jekyllrb.com . You can find the source code for Minima at GitHub: jekyll / minima . You can find the source code for Jekyll at GitHub: jekyll / jekyll .",
    "url": "/about/",
    "relUrl": "/about/"
  }
  ,"17": {
    "title": "Home",
    "content": "Focus on writing good documentation . Just the Docs gives your documentation a jumpstart with a responsive Jekyll theme that is easily customizable and hosted on GitHub Pages. . Get started now View it on GitHub . . Getting started . Dependencies . Just the Docs is built for Jekyll, a static site generator. View the quick start guide for more information. Just the Docs requires no special plugins and can run on GitHub Pages’ standard Jekyll compiler. The Jekyll SEO Tag plugin is included by default (no need to run any special installation) to inject SEO and open graph metadata on docs pages. For information on how to configure SEO and open graph metadata visit the Jekyll SEO Tag usage guide. . Quick start: Use as a GitHub Pages remote theme . Add Just the Docs to your Jekyll site’s _config.yml as a remote theme remote_theme: pmarsceill/just-the-docs . You must have GitHub Pages enabled on your repo, one or more Markdown files, and a _config.yml file. See an example repository . | Local installation: Use the gem-based theme . Install the Ruby Gem $ gem install just-the-docs . # .. or add it to your your Jekyll site’s Gemfile gem &quot;just-the-docs&quot; . | Add Just the Docs to your Jekyll site’s _config.yml theme: &quot;just-the-docs&quot; . | Optional: Initialize search data (creates search-data.json) $ bundle exec just-the-docs rake search:init . | Run you local Jekyll server $ jekyll serve . # .. or if you&#39;re using a Gemfile (bundler) $ bundle exec jekyll serve . | Point your web browser to http://localhost:4000 | If you’re hosting your site on GitHub Pages, set up GitHub Pages and Jekyll locally so that you can more easily work in your development environment. . Configure Just the Docs . . About the project . Just the Docs is © 2017-2019 by Patrick Marsceill. . License . Just the Docs is distributed by an MIT license. . Contributing . When contributing to this repository, please first discuss the change you wish to make via issue, email, or any other method with the owners of this repository before making a change. Read more about becoming a contributor in our GitHub repo. . Thank you to the contributors of Just the Docs! . . Code of Conduct . Just the Docs is committed to fostering a welcoming community. . View our Code of Conduct on our GitHub repository. .",
    "url": "/",
    "relUrl": "/"
  }
  
}